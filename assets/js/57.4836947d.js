(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{596:function(t,e,v){"use strict";v.r(e);var _=v(4),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"title"},[t._v("需求")]),v("p",[t._v("当前的 IP 地址解析模块都集成到应用中去了，IP 地址库更新很不方便，过往曾经出过 2 次全局的故障，很有必要提供独立的服务来进行 IP 地址解析。")])]),v("h2",{attrs:{id:"设计方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设计方案"}},[t._v("#")]),t._v(" 设计方案")]),t._v(" "),v("p",[t._v("将 IP 解析拆分为三个项目")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("项目")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("client")]),t._v(" "),v("td",[t._v("IP 解析 Service 服务接口定义")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("ipparser")]),t._v(" "),v("td",[t._v("对外提供服务实现，实现 "),v("code",[t._v("tools-client")]),t._v(" 定义的接口，调用 "),v("code",[t._v("tools-ipparser")]),t._v(" 完成具体解析逻辑")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("tools-ipparser")]),t._v(" "),v("td",[t._v("IP 解析底层实现逻辑")])])])]),t._v(" "),v("p",[t._v("这样拆分有以下好处：")]),t._v(" "),v("ol",[v("li",[t._v("IP 解析依赖离线 IP 地址库，拆分后，只需确保 ipparser 项目部署时 IP 地址库文件正确，而不会影响到其他应用")]),t._v(" "),v("li",[t._v("应用只需要依赖 "),v("code",[t._v("tools-client")]),t._v(" 即可，通过 dubbo 调用 ipparser 进行解析")]),t._v(" "),v("li",[t._v("第三方团队需要特殊化的 IP 解析服务，可以只依赖 "),v("code",[t._v("tools-ipparser")]),t._v(" 然后自己提供特殊服务即可")]),t._v(" "),v("li",[t._v("……")])]),t._v(" "),v("h2",{attrs:{id:"注意"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),v("p",[t._v("服务化后远程调用都需要注意远程调用过程中的可能出现的异常，如超时、网络、服务器宕机等，所以需要注意对于这些异常的处理，\n可以直接在调用处 try catch，或者在服务 Service 定义处写一个代理类，调用远程服务实现该 Service 接口，对远程调用统一进行异常处理，\n然后在应用中直接注入代理实现类，就不用在每个调用处进行 try catch 了。")])])}),[],!1,null,null,null);e.default=a.exports}}]);
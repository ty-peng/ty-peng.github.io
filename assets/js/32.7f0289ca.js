(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{571:function(t,a,s){"use strict";s.r(a);var v=s(4),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block theorem"},[s("p",{staticClass:"title"},[t._v("概述")]),s("p",[t._v("记录一些在实际开发工作中遇到的问题，了解的业务或设计经验总结，或者偶然收获的一些开发中注意的点。")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("注意")]),s("ul",[s("li",[t._v("编写业务代码时\n"),s("ul",[s("li",[t._v("从底向上，由简到繁，先对底层某个单元的代码的业务逻辑进行测试验证，然后逐步向上验证，先不考虑性能优化，尽量减少不确定因素。")]),t._v(" "),s("li",[t._v("先写一个最简单的版本，验证业务逻辑是否正确")]),t._v(" "),s("li",[t._v("代码越多，越容易出错")]),t._v(" "),s("li",[t._v("流式编程注意格式，可读性")])])]),t._v(" "),s("li",[t._v("对于线上应用，不要忘记对于"),s("strong",[t._v("旧版本")]),t._v("请求的兼容，和"),s("strong",[t._v("不停机")]),t._v("的可能，以及服务化后的发布问题。")]),t._v(" "),s("li",[t._v("注意多机房同步问题")]),t._v(" "),s("li",[t._v("不要忘记服务化后的远程调用异常处理（超时、网络、服务器宕机等异常）")])])]),s("h2",{attrs:{id:"一、业务场景方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、业务场景方案"}},[t._v("#")]),t._v(" 一、业务场景方案")]),t._v(" "),s("h3",{attrs:{id:"对于某些需要固定-id-的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对于某些需要固定-id-的数据"}},[t._v("#")]),t._v(" 对于某些需要固定 ID 的数据")]),t._v(" "),s("p",[t._v("有时候未必一定要插入数据库记录，\n可以设置提高当前表的 "),s("code",[t._v("auto_increment")]),t._v("，中间一段空缺的 ID 可以作为固定 ID，\n具体信息可保存在 Java 枚举中，视具体业务而定。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" xxx "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("109000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),t._v(" "),s("h3",{attrs:{id:"在线上环境进行数据迁移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在线上环境进行数据迁移"}},[t._v("#")]),t._v(" 在线上环境进行数据迁移")]),t._v(" "),s("ol",[s("li",[t._v("创建好新表")]),t._v(" "),s("li",[t._v("完成双写\n"),s("ul",[s("li",[t._v("检测业务正确性，增删改，数据是否一致，看是否有 bug")])])]),t._v(" "),s("li",[t._v("迁移数据")]),t._v(" "),s("li",[t._v("切换读（保持双写）\n"),s("ul",[s("li",[t._v("观察")])])]),t._v(" "),s("li",[t._v("稳定后去除旧表写")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("Tips")]),s("p",[t._v("以上每个阶段都可独立发布")])]),t._v(" "),s("h3",{attrs:{id:"分页相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页相关"}},[t._v("#")]),t._v(" 分页相关")]),t._v(" "),s("h4",{attrs:{id:"查询时数据增删变动相关问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询时数据增删变动相关问题"}},[t._v("#")]),t._v(" "),s("em",[t._v("查询时数据增删变动相关问题")])]),t._v(" "),s("p",[t._v("分页查询对应前端交互来说有翻页和瀑布流两种形式，但是如果在分页过程中，后台列表数据进行了新增或者删除等操作，\n查看下一页时，查询到的数据就可能有误。"),s("br"),t._v(" "),s("RouterLink",{attrs:{to:"/views/note/back-end/202004181200-paging-when-data-changed.html"}},[t._v("分页查询时数据增删变动相关问题")])],1),t._v(" "),s("h3",{attrs:{id:"商品订单存储的设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#商品订单存储的设计"}},[t._v("#")]),t._v(" 商品订单存储的设计")]),t._v(" "),s("ul",[s("li",[t._v("当用户量相对较少时，消费购买（的物品）记录、订单（支付相关信息）记录表都可以在同一张表内进行查询、统计等。")]),t._v(" "),s("li",[t._v("当用户量比较大时，订单记录数据量过大，这时候就需要进行分表，\n可以按照用户维度进行分表存储订单支付记录，同时可以另建一个消费购买记录表，用于查询用户已购资源等，\n但是订单记录分表按用户维度分表之后，进行跨用户的查询和统计就会有一些问题，\n所以这时候可以再引入 ES 等进行所有订单的跨用户查询和统计等。")])]),t._v(" "),s("h3",{attrs:{id:"分表相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分表相关"}},[t._v("#")]),t._v(" 分表相关")]),t._v(" "),s("h4",{attrs:{id:"分表后可能导致的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分表后可能导致的问题"}},[t._v("#")]),t._v(" "),s("em",[t._v("分表后可能导致的问题")])]),t._v(" "),s("ul",[s("li",[t._v("唯一性校验")]),t._v(" "),s("li",[t._v("如用户分表是以用户 ID 为维度去分的，那怎么通过账号手机号邮箱等找到对应的表"),s("br"),t._v("\n（可以再建立一个 "),s("code",[t._v("账号 -> 用户 ID")]),t._v(" 的索引表）")])]),t._v(" "),s("h3",{attrs:{id:"资源所属榜单信息展示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源所属榜单信息展示"}},[t._v("#")]),t._v(" 资源所属榜单信息展示")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/views/note/back-end/202009161800-design-resource-rank.html"}},[t._v("记录一次资源增加所属榜单信息的方案设计")])],1)]),t._v(" "),s("h3",{attrs:{id:"图片多规格上传方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片多规格上传方案"}},[t._v("#")]),t._v(" 图片多规格上传方案")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/views/note/back-end/202010151119-design-img-multiple-size-upload.html"}},[t._v("图片多规格上传方案及注意点")])],1)]),t._v(" "),s("h3",{attrs:{id:"服务调用链分析相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务调用链分析相关"}},[t._v("#")]),t._v(" 服务调用链分析相关")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/views/note/back-end/202010171641-troubleshoot-call-chain-analysis.html"}},[t._v("记录服务调用链记录分析相关")])],1)]),t._v(" "),s("h3",{attrs:{id:"预防缓存击穿"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预防缓存击穿"}},[t._v("#")]),t._v(" 预防缓存击穿")]),t._v(" "),s("p",[t._v("在只有少量查询数据会有缓存，大量查询为空的情况下，防止缓存击穿一般大体有以下两种方式：")]),t._v(" "),s("ol",[s("li",[t._v("缓存空结果")]),t._v(" "),s("li",[t._v("增加布隆过滤器")])]),t._v(" "),s("p",[t._v("这两种都有各自的取舍，可以结合使用，以避免缓存大量空数据，节省内存")]),t._v(" "),s("p",[t._v("同时业务上也可以直接针对少量数据去做主动推送")]),t._v(" "),s("h2",{attrs:{id:"二、代码编写注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、代码编写注意事项"}},[t._v("#")]),t._v(" 二、代码编写注意事项")]),t._v(" "),s("h3",{attrs:{id:"接口返回"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口返回"}},[t._v("#")]),t._v(" 接口返回")]),t._v(" "),s("ol",[s("li",[t._v("查询接口，查询单个 Bean 可返回 "),s("code",[t._v("null")]),t._v("，\n对于查询列表，list 只是一个中间载体，它本身最后不返回为 "),s("code",[t._v("null")]),t._v("，\n可以返回 "),s("code",[t._v("Collections.emptyList()")])])]),t._v(" "),s("h3",{attrs:{id:"远程调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远程调用"}},[t._v("#")]),t._v(" 远程调用")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("业务方法中，使用 http 或者其他通信调用其它方法时，一般要考虑到可能阻塞的点"),s("br"),t._v("\n除了"),s("strong",[t._v("异常")]),t._v("，还要考虑到"),s("strong",[t._v("超时")]),t._v("。服务化之后尤其需要注意！")])]),t._v(" "),s("li",[s("p",[t._v("服务化后远程调用都需要注意远程调用过程中的可能出现的异常，如超时、网络、服务器宕机等，所以需要注意对于这些异常的处理，\n可以直接在调用处 try catch，或者在服务 Service 定义处写一个代理类，调用远程服务实现该 Service 接口，对远程调用统一进行异常处理，\n然后在应用中直接注入代理实现类，就不用在每个调用处进行 try catch 了。")])])]),t._v(" "),s("h3",{attrs:{id:"同步异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步异步"}},[t._v("#")]),t._v(" 同步异步")]),t._v(" "),s("ol",[s("li",[t._v("业务方法中涉及到多个操作时，可以根据每个操作的"),s("strong",[t._v("代价和消耗")]),t._v("选择"),s("strong",[t._v("同步还是异步处理")]),s("br"),t._v("\n如果某个操作耗时过久或者消耗过大，可以另起线程异步处理，如果比较重要，也可以异步处理后进行回调；"),s("br"),t._v("\n同时要考虑事务的影响。")])]),t._v(" "),s("h3",{attrs:{id:"异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常"}},[t._v("#")]),t._v(" 异常")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("关于一个方法是否抛出"),s("strong",[t._v("异常")]),t._v("的处理")]),t._v(" "),s("ul",[s("li",[t._v("检查性异常如果在方法中抛出，会在方法上声明，声明是希望得到处理，但也只是一种设计上的约定意味，")]),t._v(" "),s("li",[t._v("非检查性异常可以不在方法上声明，一般可能不太重要，如果不抛出可以内部消化。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("所有抛出的异常不管是检查性异常还是非检查性异常，如果上层方法未进行处理，都会中断上层方法。"),s("br"),t._v("\n同时应该考虑是否涉及到事务问题。")])])])]),t._v(" "),s("h2",{attrs:{id:"三、编程思想总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、编程思想总结"}},[t._v("#")]),t._v(" 三、编程思想总结")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/views/note/back-end/202006231316-java-programming-thinking.html"}},[t._v("Java 编程思想总结")])],1)]),t._v(" "),s("h2",{attrs:{id:"四、问题处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、问题处理"}},[t._v("#")]),t._v(" 四、问题处理")]),t._v(" "),s("h3",{attrs:{id:"遇到的一个-git-合并错了分支的恢复问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遇到的一个-git-合并错了分支的恢复问题"}},[t._v("#")]),t._v(" 遇到的一个 Git 合并错了分支的恢复问题")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/views/note/ops/202003302049-git-merge-problem.html"}},[t._v("遇到的一个 Git 合并错了分支的恢复问题")])],1)]),t._v(" "),s("h3",{attrs:{id:"map-containskey-传参类型问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-containskey-传参类型问题"}},[t._v("#")]),t._v(" Map.containsKey() 传参类型问题")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/views/note/back-end/202009111657-map-containsKey.html"}},[t._v("记录一次 Map.containsKey() 传参类型问题")])],1)]),t._v(" "),s("h3",{attrs:{id:"关于-mysql-中-timestamp-类型有效取值范围的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-mysql-中-timestamp-类型有效取值范围的问题"}},[t._v("#")]),t._v(" 关于 MySQL 中 Timestamp 类型有效取值范围的问题")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/views/note/back-end/202010141945-troubleshoot-mysql-timestamp-range.html"}},[t._v("关于 MySQL 中 Timestamp 类型有效取值范围的问题")])],1)]),t._v(" "),s("h3",{attrs:{id:"故障异常处理记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#故障异常处理记录"}},[t._v("#")]),t._v(" 故障异常处理记录")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/views/note/back-end/202009151113-troubleshoot-record.html"}},[t._v("线上故障异常处理记录")])],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);